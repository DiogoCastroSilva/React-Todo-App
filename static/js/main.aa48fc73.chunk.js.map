{"version":3,"sources":["redux/store/store.js","redux/reducers/rootReducer.js","redux/actions/action-types.js","redux/middleware/forbiddenWordsMiddleware .js","components/Header.js","components/TaskItem.js","components/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["currentValue","initialState","currentItem","text","key","todos","completed","error","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","id","concat","toConsumableArray","newTodo","filter","todo","newTodos","complete","completeds","forbiddenWords","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","_ref","dispatch","next","word","includes","thunk","subscribe","getState","localStorage","setItem","JSON","stringify","Header","handleTaskChange","e","preventDefault","target","value","Date","_this","props","changeCurrent","addTask","_this$props","this","styleToAdd","react_default","a","createElement","onSubmit","style","color","placeholder","onChange","xmlns","viewBox","className","d","React","Component","connect","item","TaskItem","createCompleted","onClick","removeCompleted","width","height","_this2","todoList","map","Tasks","whatToDo","addTaskToCompleted","removeTask","removeCompletedTask","storage","parse","getItem","addLocalStorage","components_TaskItem","App","components_Header","components_Tasks","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6JAUIA,iECREC,EAAe,CACjBC,YAAa,CAACC,KAAM,GAAIC,IAAK,IAC7BC,MAAO,GACPC,UAAW,GACXC,OAAO,GAuEIC,EApEK,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBT,EAAcY,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOC,MACV,ICXsB,iBDYlB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIP,YAAaW,EAAOI,GACpBV,OAAO,IAEf,IAAK,WACD,MAAO,CACHL,YAAa,CAACC,KAAM,GAAIC,IAAK,IAC7BC,MAAK,GAAAa,OAAAH,OAAAI,EAAA,EAAAJ,CAAMN,EAAMJ,OAAZ,CAAmBQ,EAAOI,KAC/BX,UAAUS,OAAAI,EAAA,EAAAJ,CAAKN,EAAMH,WACrBC,OAAO,GAGf,IAAK,mBACD,IAAMa,EAAUX,EAAMJ,MAAMgB,OAAO,SAAAC,GAAI,OAAIA,EAAKlB,MAAQS,EAAOI,GAAGb,MAC5DE,EAAYG,EAAMH,UAAN,GAAAY,OAAAH,OAAAI,EAAA,EAAAJ,CAAsBN,EAAMH,WAA5B,CAAuCO,EAAOI,KAAM,CAACJ,EAAOI,IAE9E,MAAO,CACHf,YAAaO,EAAMP,YACnBG,MAAOe,EACPd,UAAWA,EACXC,OAAO,GAEf,IAAK,cACD,IAAMgB,EAAWd,EAAMJ,MAAMgB,OAAO,SAAAC,GAAI,OAAIA,EAAKlB,MAAQS,EAAOI,GAAGb,MAEnE,MAAO,CACHF,YAAaO,EAAMP,YACnBG,MAAOkB,EACPjB,UAAWG,EAAMH,UACjBC,OAAO,GAEf,IAAK,mBACD,IAAMiB,EAAWf,EAAMH,UAAUe,OAAO,SAAAG,GAAQ,OAAIA,EAASpB,MAAQS,EAAOI,GAAGb,MAE/E,MAAO,CACHF,YAAaO,EAAMP,YACnBG,MAAOI,EAAMJ,MACbC,UAAWkB,EACXjB,OAAO,GAEf,IAAK,oBACJ,IAAMF,EAAQQ,EAAOI,GAAGZ,MAAQQ,EAAOI,GAAGZ,MAAQ,GAC5CoB,EAAaZ,EAAOI,GAAGX,UAAYO,EAAOI,GAAGX,UAAY,GAE5D,MAAO,CACHJ,YAAa,CAACC,KAAM,GAAIC,IAAK,IAC7BC,MAAMU,OAAAI,EAAA,EAAAJ,CAAKV,GACXC,UAAUS,OAAAI,EAAA,EAAAJ,CAAKU,GACflB,OAAO,GAEf,IAAK,iBAED,MAAO,CACHL,YAAa,CAACC,KAAI,sBAAyBC,IAAK,MAChDC,MAAOI,EAAMJ,MACbC,UAAWG,EAAMH,UACjBC,OAAO,GAEf,QACI,OAAOE,YEtEbiB,EAAiB,CAAC,OAAQ,SHI1BC,EAAiBC,OAAOC,sCAAwCC,IAEhEC,EAAQC,YAAYxB,EAAamB,EAAeM,YGJd,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkB,SAACC,GAAD,OAAU,SAACvB,GAE/D,MDLkB,aCKdA,EAAOC,MAESY,EAAeL,OAAO,SAAAgB,GAAI,OAC1CxB,EAAOI,GAAGd,KAAKmC,SAASD,KAEZ1B,OACLwB,EAAS,CAAErB,KDNE,mBCSjBsB,EAAKvB,MHP8E0B,OAa5ER,EAAMS,UAV1B,WACwBxC,KACpBA,EAAe+B,EAAMU,aAGjBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAU7C,MAKxD,IAEe+B,uCIpBTe,oNAEFC,iBAAmB,SAAAC,GACfA,EAAEC,iBADkB,IAId/C,EAAc,CAAEC,KADJ6C,EAAEE,OAAZC,MAC2B/C,IAAK,IAAIgD,MAE5CC,EAAKC,MAAMC,cAAcrD,MAG3BsD,QAAU,SAAAR,GACRA,EAAEC,iBADW,IAGL/C,EAAgBmD,EAAKC,MAArBpD,YAEJA,EAAYC,MACZkD,EAAKC,MAAME,QAAQtD,4EAIlB,IAAAuD,EAC0BC,KAAKJ,MAA5BpD,EADHuD,EACGvD,YACFyD,EAFDF,EACgBlD,MACM,MAAQ,QAEnC,OACIqD,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,QAAMC,SAAUL,KAAKF,SACjBI,EAAAC,EAAAC,cAAA,SAAOE,MAAO,CAACC,MAAON,GAAa1C,GAAG,OAAOH,KAAK,OAAOqC,MAAOjD,EAAYC,KAAM+D,YAAY,cAAcC,SAAUT,KAAKX,mBAC3Ha,EAAAC,EAAAC,cAAA,UAAQhD,KAAK,SAAUG,GAAG,OAC1B2C,EAAAC,EAAAC,cAAA,OAAKM,MAAM,6BAA6BC,QAAQ,aAAYT,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,wJA9BpFC,IAAMC,YAqDZC,cAfS,SAACjE,GACrB,MAAO,CACLP,YAAaO,EAAMP,YACnBG,MAAOI,EAAMJ,MACbE,MAAOE,EAAMF,QAIQ,SAAC4B,GACxB,MAAO,CACHoB,cAAe,SAACoB,GAAWxC,EAAS,CAACrB,KAAM,iBAAkBG,GAAI0D,KACjEnB,QAAS,SAACmB,GAAWxC,EAAS,CAACrB,KAAM,WAAYG,GAAI0D,OAI9CD,CAA6C5B,GCd7C8B,6MAtCXC,gBAAkB,SAACF,EAAM1D,GACrB,OACE2C,EAAAC,EAAAC,cAAA,MAAI1D,IAAKuE,EAAKvE,KACbuE,EAAKxE,KACNyD,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACXV,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,SAASQ,QAAS,kBAAMzB,EAAKC,MAAMyB,gBAAgBJ,EAAM1D,EAAI,YAC7E2C,EAAAC,EAAAC,cAAA,OAAKM,MAAM,6BAA6BC,QAAQ,aAC5CT,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,SAASU,MAAM,KAAKC,OAAO,OAC3CrB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,ybACzBX,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,0GACzBX,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,4GACzBX,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,kHAG/BX,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,WAAWQ,QAAS,kBAAMzB,EAAKC,MAAMyB,gBAAgBJ,EAAM1D,EAAI,cAC7E2C,EAAAC,EAAAC,cAAA,OAAKM,MAAM,6BAA6BC,QAAQ,aAC9CT,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,SAASU,MAAM,KAAKC,OAAO,OAC3CrB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOC,EAAE,mQAQhC,IAAAW,EAAAxB,KAAAD,EACiBC,KAAKJ,MAAnBjD,EADHoD,EACGpD,MAAOY,EADVwC,EACUxC,GACTkE,EAAW9E,EAAQA,EAAM+E,IAAI,SAAA9D,GAAI,OAAI4D,EAAKL,gBAAgBvD,EAAML,KAAO,KAE7E,OACI2C,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,OAAOrD,GAAIA,GACpBkE,UAjCMX,IAAMC,WCGvBY,6MAOFN,gBAAkB,SAACJ,EAAM1D,EAAIqE,GACf,SAAPrE,IACkB,aAAbqE,EACAjC,EAAKC,MAAMiC,mBAAmBZ,GACV,WAAbW,GACPjC,EAAKC,MAAMkC,WAAWb,IAIpB,cAAP1D,GACkB,WAAbqE,GACAjC,EAAKC,MAAMmC,oBAAoBd,uFAfvC,IAAIe,EAAU9C,KAAK+C,MAAMjD,aAAakD,QAAQ,aAC9ClC,KAAKJ,MAAMuC,gBAAgBH,oCAmBtB,IAAAjC,EACwBC,KAAKJ,MAA1BjD,EADHoD,EACGpD,MAAOC,EADVmD,EACUnD,UACf,OACIsD,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACXV,EAAAC,EAAAC,cAACgC,EAAD,CAAUzF,MAAOA,EAAO0E,gBAAiBrB,KAAKqB,gBAAiB9D,GAAG,SAClE2C,EAAAC,EAAAC,cAACgC,EAAD,CAAUzF,MAAOC,EAAWyE,gBAAiBrB,KAAKqB,gBAAiB9D,GAAG,sBA5BlEuD,IAAMC,WAmDXC,cAjBS,SAACjE,GACrB,MAAO,CACLJ,MAAOI,EAAMJ,MACbC,UAAWG,EAAMH,YAIM,SAAC6B,GAC1B,MAAO,CACHoD,mBAAoB,SAACZ,GAAWxC,EAAS,CAACrB,KAAM,mBAAoBG,GAAI0D,KACxEa,WAAY,SAACb,GAAWxC,EAAS,CAACrB,KAAM,cAAeG,GAAI0D,KAC3Dc,oBAAqB,SAACd,GAAWxC,EAAS,CAACrB,KAAM,mBAAoBG,GAAI0D,KACzEkB,gBAAiB,SAAClB,GAAWxC,EAAS,CAAErB,KAAM,oBAAqBG,GAAI0D,OAKhED,CAA6CW,GCrC7CU,mLAVT,OACInC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAACmC,EAAD,cANMzB,IAAMC,WCMJyB,QACW,cAA7BtE,OAAOuE,SAASC,UAEe,UAA7BxE,OAAOuE,SAASC,UAEhBxE,OAAOuE,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACL3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUzE,MAAOA,GACb6B,EAAAC,EAAAC,cAAC2C,EAAD,OAEFC,SAASC,eAAe,SDmHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aa48fc73.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { forbiddenWordsMiddleware } from '../middleware/forbiddenWordsMiddleware ';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers(applyMiddleware(forbiddenWordsMiddleware, thunk)));\r\n\r\nlet currentValue;\r\nfunction handleChange() {\r\n    let previousValue = currentValue;\r\n    currentValue = store.getState();\r\n\r\n    if (previousValue !== currentValue) {\r\n        localStorage.setItem('todoList', JSON.stringify(currentValue));\r\n    }\r\n}\r\n\r\n\r\nconst unsubscribe = store.subscribe(handleChange);\r\n\r\nexport default store;","import { CHANGE_CURRENT } from \"../actions/action-types\";\r\n\r\nconst initialState = {\r\n    currentItem: {text: '', key: ''},\r\n    todos: [],\r\n    completed: [],\r\n    error: false\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CHANGE_CURRENT:\r\n            return {\r\n                ...state,\r\n                currentItem: action.id,\r\n                error: false\r\n            };\r\n        case 'ADD_TASK':\r\n            return {\r\n                currentItem: {text: '', key: ''},\r\n                todos: [...state.todos, action.id],\r\n                completed: [...state.completed],\r\n                error: false\r\n            };\r\n        \r\n        case 'ADD_TO_COMPLETED':      \r\n            const newTodo = state.todos.filter(todo => todo.key !== action.id.key);\r\n            const completed = state.completed ? [...state.completed, action.id] : [action.id];\r\n\r\n            return {\r\n                currentItem: state.currentItem,\r\n                todos: newTodo,\r\n                completed: completed,\r\n                error: false\r\n            }\r\n        case 'REMOVE_TASK':\r\n            const newTodos = state.todos.filter(todo => todo.key !== action.id.key);\r\n            \r\n            return {\r\n                currentItem: state.currentItem,\r\n                todos: newTodos,\r\n                completed: state.completed,\r\n                error: false\r\n            }\r\n        case 'REMOVE_COMPLETED':\r\n            const complete = state.completed.filter(complete => complete.key !== action.id.key);\r\n\r\n            return {\r\n                currentItem: state.currentItem,\r\n                todos: state.todos,\r\n                completed: complete,\r\n                error: false\r\n            }\r\n        case 'ADD_LOCAL_STORAGE':\r\n         const todos = action.id.todos ? action.id.todos : [];\r\n         const completeds = action.id.completed ? action.id.completed : [];\r\n\r\n            return {\r\n                currentItem: {text: '', key: ''},\r\n                todos: [...todos],\r\n                completed: [...completeds],\r\n                error: false\r\n        }\r\n        case 'FOUND_BAD_WORD':\r\n\r\n            return {\r\n                currentItem: {text: `Can't use that word`, key: null},\r\n                todos: state.todos,\r\n                completed: state.completed,\r\n                error: true\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};\r\n\r\nexport default rootReducer;","export const CHANGE_CURRENT = 'CHANGE_CURRENT';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const ADD_TO_COMPLETED = 'ADD_TO_COMPLETED';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const REMOVE_COMPLETED = 'REMOVE_COMPLETED';\r\nexport const ADD_LOCAL_STORAGE = 'ADD_LOCAL_STORAGE';\r\nexport const FOUND_BAD_WORD = 'FOUND_BAD_WORD';","import { ADD_TASK, FOUND_BAD_WORD /* , CHANGE_CURRENT */ } from '../actions/action-types';\r\n\r\nconst forbiddenWords = ['spam', 'money'];\r\n\r\nexport const forbiddenWordsMiddleware = ({ dispatch }) => (next) => (action) => {\r\n      // do your stuff\r\n      if (action.type === ADD_TASK /* || action.type === CHANGE_CURRENT */) {\r\n        \r\n        const foundWord = forbiddenWords.filter(word =>\r\n          action.id.text.includes(word)\r\n        );\r\n        if (foundWord.length) {\r\n          return dispatch({ type: FOUND_BAD_WORD });\r\n        }\r\n      }\r\n      return next(action);\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n\r\n    handleTaskChange = e => {\r\n        e.preventDefault();\r\n\r\n        const { value } = e.target;\r\n        const currentItem = { text: value, key: new Date() };\r\n\r\n        this.props.changeCurrent(currentItem);\r\n      }\r\n\r\n      addTask = e => {\r\n        e.preventDefault();\r\n    \r\n        const { currentItem } = this.props;\r\n\r\n        if (currentItem.text) {\r\n            this.props.addTask(currentItem);\r\n        }   \r\n      }\r\n\r\n    render() {\r\n        const { currentItem, error } = this.props;\r\n        const styleToAdd = error ? 'red' : 'white';\r\n\r\n        return (\r\n            <header>\r\n                <form onSubmit={this.addTask}>\r\n                    <input style={{color: styleToAdd}} id=\"item\" type=\"text\" value={currentItem.text} placeholder=\"add task...\" onChange={this.handleTaskChange} />\r\n                    <button type=\"submit\"  id=\"add\">\r\n                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path className='fill' d='M16,8c0,0.5-0.5,1-1,1H9v6c0,0.5-0.5,1-1,1s-1-0.5-1-1V9H1C0.5,9,0,8.5,0,8s0.5-1,1-1h6V1c0-0.5,0.5-1,1-1s1,0.5,1,1v6h6C15.5,7,16,7.5,16,8z' /></svg>\r\n                    </button>\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentItem: state.currentItem,\r\n      todos: state.todos,\r\n      error: state.error\r\n    }\r\n  };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeCurrent: (item) => { dispatch({type: 'CHANGE_CURRENT', id: item }); },\r\n        addTask: (item) => { dispatch({type: 'ADD_TASK', id: item });}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\n\r\nclass TaskItem extends React.Component {\r\n\r\n    createCompleted = (item, id) => {\r\n        return (\r\n          <li key={item.key}>\r\n          {item.text}\r\n          <div className=\"buttons\">\r\n              <button className=\"remove\" onClick={() => this.props.removeCompleted(item, id, 'remove')}>\r\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 22 22'>\r\n                    <rect className='noFill' width='22' height='22' />\r\n                    <path className='fill' d='M16.1,3.6h-1.9V3.3c0-1.3-1-2.3-2.3-2.3h-1.7C8.9,1,7.8,2,7.8,3.3v0.2H5.9c-1.3,0-2.3,1-2.3,2.3v1.3c0,0.5,0.4,0.9,0.9,1v10.5c0,1.3,1,2.3,2.3,2.3h8.5c1.3,0,2.3-1,2.3-2.3V8.2c0.5-0.1,0.9-0.5,0.9-1V5.9C18.4,4.6,17.4,3.6,16.1,3.6z M9.1,3.3c0-0.6,0.5-1.1,1.1-1.1h1.7c0.6,0,1.1,0.5,1.1,1.1v0.2H9.1V3.3z M16.3,18.7c0,0.6-0.5,1.1-1.1,1.1H6.7c-0.6,0-1.1-0.5-1.1-1.1V8.2h10.6V18.7z M17.2,7H4.8V5.9c0-0.6,0.5-1.1,1.1-1.1h10.2c0.6,0,1.1,0.5,1.1,1.1V7z'/>\r\n                    <path className='fill' d='M11,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6s0.6,0.3,0.6,0.6v6.8C11.6,17.7,11.4,18,11,18z'/>\r\n                    <path className='fill' d='M8,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v6.8C8.7,17.7,8.4,18,8,18z'/>\r\n                    <path className='fill' d='M14,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v6.8C14.6,17.7,14.3,18,14,18z'/>\r\n                </svg>       \r\n              </button>\r\n              <button className=\"complete\" onClick={() => this.props.removeCompleted(item, id, 'complete')}>\r\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 22 22'>\r\n                    <rect className='noFill' width='22' height='22' />\r\n                    <path className='fill' d='M9.7,14.4L9.7,14.4c-0.2,0-0.4-0.1-0.5-0.2l-2.7-2.7c-0.3-0.3-0.3-0.8,0-1.1s0.8-0.3,1.1,0l2.1,2.1l4.8-4.8c0.3-0.3,0.8-0.3,1.1,0s0.3,0.8,0,1.1l-5.3,5.3C10.1,14.3,9.9,14.4,9.7,14.4z'/>\r\n                  </svg>\r\n              </button>\r\n          </div>\r\n          </li>\r\n        );\r\n      }\r\n\r\n    render() {\r\n        const { todos, id } = this.props;\r\n        const todoList = todos ? todos.map(todo => this.createCompleted(todo, id)) : null;\r\n\r\n        return(\r\n            <ul className=\"todo\" id={id}>\r\n                {todoList}\r\n            </ul>\r\n            );\r\n       \r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TaskItem from './TaskItem';\r\n\r\nclass Tasks extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let storage = JSON.parse(localStorage.getItem('todoList'));\r\n        this.props.addLocalStorage(storage);\r\n    }\r\n\r\n    removeCompleted = (item, id, whatToDo) => {\r\n        if(id === 'todo') {\r\n            if (whatToDo === 'complete') {\r\n                this.props.addTaskToCompleted(item);\r\n            } else if (whatToDo === 'remove') {\r\n                this.props.removeTask(item);\r\n            }\r\n        }\r\n\r\n        if(id === 'completed') {\r\n            if (whatToDo === 'remove') {\r\n                this.props.removeCompletedTask(item);\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { todos, completed } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <TaskItem todos={todos} removeCompleted={this.removeCompleted} id='todo'  />\r\n                <TaskItem todos={completed} removeCompleted={this.removeCompleted} id='completed' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      todos: state.todos,\r\n      completed: state.completed\r\n    }\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTaskToCompleted: (item) => { dispatch({type: 'ADD_TO_COMPLETED', id: item }); },\r\n        removeTask: (item) => { dispatch({type: 'REMOVE_TASK', id: item });},\r\n        removeCompletedTask: (item) => { dispatch({type: 'REMOVE_COMPLETED', id: item });},\r\n        addLocalStorage: (item) => { dispatch({ type: 'ADD_LOCAL_STORAGE', id: item }); }\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\n\nclass App extends React.Component {\n \n  render() {\n      return (\n          <div>\n            <Header />\n            <Tasks />\n          </div>\n      );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}